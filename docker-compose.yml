version: "3"
services:
  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - default
  php72:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP_VERSION72}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: php72
    expose:
      - 9501

    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default  
  php73:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP_VERSION73}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: php73
    expose:
      - 9501

    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default
  php74:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP_VERSION74}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: php74
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  php56:
    build:
     context: ./services/php
     args:
       PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
       CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
       PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
       TZ: "$TZ"
    container_name: php56
    expose:
     - 9501
    volumes:
     - ${SOURCE_DIR}:/www/:rw
     - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
     - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
     - ${PHP56_LOG_DIR}:/var/log/php
     - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
     - SYS_PTRACE
    networks:
     - default
     
  pureftpd:
    container_name: pureftpd
    image: stilliard/pure-ftpd
    volumes:
        - "${SOURCE_DIR}:/home/ftpusers/www"
        - "./services/pureftpd:/etc/pure-ftpd"
    restart: always
    ports:
        - "21:21"
        #- "20000-20200:20000-20200"
        #- "30000-30200:30000-30200"
    environment:
        PUBLICHOST: localhost
    networks:
      - default
      
  golang:
    build:
      context: ./services/golang
    container_name: golang
    ports:
      - "8088:8088"
    restart: always
    
  javaweb:
    container_name: javaweb
    image: openjdk:8-jre-alpine
    volumes:
        - "./www/javaweb:/app/"
    entrypoint: ["java", "-jar", "/app/hello.jar", ">", "spring.log", "&"]
    environment:
      TZ: "$TZ"
    restart: always
    ports:
        - "8080:8080"
    networks:
      - default
  # nodejs:
    # build:
      # context: ./services/nodejs
    # container_name: nodejs
    # ports:
      # - "4000:4000"
    # volumes:
      # - ${SOURCE_DIR}:/app
    # stdin_open: true
    # tty: true
    # restart: always
  nodejs:
    build:
      context: ./services/nodejs
    container_name: nodejs
    ports:
      - "3000:3000"
    volumes:
      - "${SOURCE_DIR}/nodejsweb:/app"
    #stdin_open: true
    #tty: true
    restart: always  

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"

  redis:
     image: redis:${REDIS_VERSION}
     container_name: redis
     ports:
       - "${REDIS_HOST_PORT}:6379"
     volumes:
       - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
       - ${DATA_DIR}/redis:/data/:rw
     restart: always
     entrypoint: ["redis-server", "/etc/redis.conf"]
     environment:
       TZ: "$TZ"
     networks:
       - default


  rabbitmq:
     image: rabbitmq:${RABBITMQ_VERSION}
     container_name: rabbitmq
     restart: always
     ports:
       - "${RABBITMQ_HOST_PORT_C}:5672"
       - "${RABBITMQ_HOST_PORT_S}:15672"
     environment:
        TZ: "$TZ"
        RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
        RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
     networks:
           - default

  phpmyadmin:
     #image: phpmyadmin/phpmyadmin:5.0.1-fpm-alpine
     image: phpmyadmin/phpmyadmin:latest
     container_name: phpmyadmin
     ports:
       - "${PHPMYADMIN_HOST_PORT}:80"
     volumes:
       - ${PHPMYADMIN_USER_CONF_FILE}:/etc/phpmyadmin/config.user.inc.php:ro
       - ${PHPMYADMIN_PHP_CONF_FILE}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini:ro
     networks:
       - default
     environment:
       - PMA_HOST=mysql
       - PMA_PORT=3306
       - TZ=$TZ

  phpredisadmin:
     image: erikdubbelboer/phpredisadmin:latest
     container_name: phpredisadmin
     ports:
       - "${REDISMYADMIN_HOST_PORT}:80"
     networks:
       - default
     environment:
       - REDIS_1_HOST=redis
       - REDIS_1_PORT=6379
       - TZ=$TZ

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
       - "${MONGODB_HOST_PORT}:27017"
    networks:
       - default
    command:
       --auth

networks:
  default:
